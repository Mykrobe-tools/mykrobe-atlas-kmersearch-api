# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class VariantSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, genotype=None, sample_name=None):  # noqa: E501
        """VariantSearchResult - a model defined in OpenAPI

        :param genotype: The genotype of this VariantSearchResult.  # noqa: E501
        :type genotype: str
        :param sample_name: The sample_name of this VariantSearchResult.  # noqa: E501
        :type sample_name: str
        """
        self.openapi_types = {
            'genotype': str,
            'sample_name': str
        }

        self.attribute_map = {
            'genotype': 'genotype',
            'sample_name': 'sample_name'
        }

        self._genotype = genotype
        self._sample_name = sample_name

    @classmethod
    def from_dict(cls, dikt) -> 'VariantSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VariantSearchResult of this VariantSearchResult.  # noqa: E501
        :rtype: VariantSearchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def genotype(self):
        """Gets the genotype of this VariantSearchResult.


        :return: The genotype of this VariantSearchResult.
        :rtype: str
        """
        return self._genotype

    @genotype.setter
    def genotype(self, genotype):
        """Sets the genotype of this VariantSearchResult.


        :param genotype: The genotype of this VariantSearchResult.
        :type genotype: str
        """

        self._genotype = genotype

    @property
    def sample_name(self):
        """Gets the sample_name of this VariantSearchResult.


        :return: The sample_name of this VariantSearchResult.
        :rtype: str
        """
        return self._sample_name

    @sample_name.setter
    def sample_name(self, sample_name):
        """Sets the sample_name of this VariantSearchResult.


        :param sample_name: The sample_name of this VariantSearchResult.
        :type sample_name: str
        """

        self._sample_name = sample_name
